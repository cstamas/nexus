<!-- 
	
	Nexus: Maven Repository Manager
	Copyright (C) 2008 Sonatype, Inc.                                                                                                                          
	
	This file is part of Nexus.                                                                                                                                  
	
	This program is free software; you can redistribute it and/or                                                                                                 
	modify it under the terms of the GNU Lesser General Public License                                                                                            
	as published by the Free Software Foundation; either version 3                                                                                                
	of the License, or (at your option) any later version.                                                                                                        
	
	This program is distributed in the hope that it will be useful,                                                                                               
	but WITHOUT ANY WARRANTY; without even the implied warranty of                                                                                                
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                                                                                                 
	GNU Lesser General Public License for more details.                                                                                                           
	
	You should have received a copy of the GNU Lesser General Public License                                                                                      
	along with this program; if not, write to the Free Software                                                                                                   
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
	
-->

<model xsd.namespace="http://www.sonatype.com/xsd/nexus-configuration-1.0.1"
	xsd.target-namespace="http://www.sonatype.com/xsd/nexus-configuration-1.0.1">

	<id>nexus</id>

	<name>NexusConfiguration</name>

	<description>
		<![CDATA[
    	<p>Nexus Repository Manager configuration.</p>
    	]]>
	</description>

	<defaults>
		<default>
			<key>package</key>
			<value>org.sonatype.nexus.configuration.model</value>
		</default>
	</defaults>

	<classes>

		<!-- ROOT -->
		<class rootElement="true" xml.tagName="nexusConfiguration">
			<name>Configuration</name>
			<version>1.0.0+</version>
			<description>The root element of Nexus configuration.</description>
			<fields>
				<field>
					<name>version</name>
					<version>1.0.0+</version>
					<description>
						The version of the persisted model. Should be equal to the version in Nexus that consumes this
						configuration.
					</description>
					<type>String</type>
					<required>true</required>
				</field>
				<field>
					<name>workingDirectory</name>
					<version>1.0.0+</version>
					<description>
						The Nexus workingDirectory contains files needed for Nexus to function properly. Data like
						Lucene index, file attributes, shared local storage, etc. are here.
					</description>
					<type>String</type>
					<required>true</required>
					<defaultValue>${basedir}/nexus-work</defaultValue>
				</field>
				<field>
					<name>applicationLogDirectory</name>
					<version>1.0.0+</version>
					<description>
						The Nexus logDirectory should contain log files created by Nexus during work.
					</description>
					<type>String</type>
					<required>true</required>
					<defaultValue>${basedir}/logs</defaultValue>
				</field>
				<field>
					<name>security</name>
					<version>1.0.0+</version>
					<description>This section defines Nexus security.</description>
					<association>
						<type>CSecurity</type>
					</association>
					<required>true</required>
				</field>
				<field>
					<name>globalConnectionSettings</name>
					<version>1.0.0</version>
					<description>
						The global connection settings are settings applied across Nexus. These can be overridden by
						per-repository connection settings.
					</description>
					<association>
						<type>CRemoteConnectionSettings</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>globalConnectionSettings</name>
					<version>1.0.1+</version>
					<description>
						The global connection settings are settings applied across Nexus. These can be overridden by
						per-repository connection settings.
					</description>
					<association>
						<type>CRemoteConnectionSettings</type>
					</association>
					<required>true</required>
				</field>
				<field>
					<name>globalHttpProxySettings</name>
					<version>1.0.0+</version>
					<description>
						The global HTTP Proxy settings are settings applied across Nexus. These can be overridden by
						per-repository HTTP Proxy settings.
					</description>
					<association>
						<type>CRemoteHttpProxySettings</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>restApi</name>
					<version>1.0.2+</version>
					<description>The Nexus REST settings.</description>
					<association>
						<type>CRestApiSettings</type>
					</association>
					<required>true</required>
				</field>
				<field>
					<name>httpProxy</name>
					<version>1.0.2+</version>
					<description>The Nexus HTTP Proxy settings.</description>
					<association>
						<type>CHttpProxySettings</type>
					</association>
					<required>true</required>
				</field>
				<field>
					<name>routing</name>
					<version>1.0.0</version>
					<description>The routing settings alters the way Nexus routers will do they work.</description>
					<association>
						<type>CRouting</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>routing</name>
					<version>1.0.1+</version>
					<description>The routing settings alters the way Nexus routers will do they work.</description>
					<association>
						<type>CRouting</type>
					</association>
					<required>true</required>
				</field>
				<field>
					<name>repositories</name>
					<version>1.0.0+</version>
					<description>The list of defined repositories within Nexus.</description>
					<association>
						<type>CRepository</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>true</required>
				</field>
				<field>
					<name>repositoryShadows</name>
					<version>1.0.0+</version>
					<description>The list of defined repository shadows within Nexus.</description>
					<association>
						<type>CRepositoryShadow</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>false</required>
				</field>
				<field>
					<!-- In 1.0.0 only, later changed to repositoryGrouping -->
					<name>repositoryGroups</name>
					<version>1.0.0</version>
					<description>The list of defined repository groups within Nexus.</description>
					<association>
						<type>CRepositoryGroup</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>repositoryGrouping</name>
					<version>1.0.1+</version>
					<description>The repository grouping within Nexus.</description>
					<association>
						<type>CRepositoryGrouping</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>remoteNexusInstances</name>
					<version>1.0.2+</version>
					<description>The known remote nexus instances.</description>
					<association>
						<type>CRemoteNexusInstance</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>false</required>
				</field>
			</fields>
			<codeSegments>
				<codeSegment>
					<version>1.0.0</version>
					<code><![CDATA[
    public static final String MODEL_VERSION = "1.0.0";
    public static final String MODEL_VERSION_SWX = "1.0";
]]></code>
				</codeSegment>
				<codeSegment>
					<version>1.0.1</version>
					<code><![CDATA[
    public static final String MODEL_VERSION = "1.0.1";
]]></code>
				</codeSegment>
				<codeSegment>
					<version>1.0.2</version>
					<code><![CDATA[
    public static final String MODEL_VERSION = "1.0.2";
    
    public static final String LOCAL_STATUS_IN_SERVICE = "inService";

    public static final String LOCAL_STATUS_OUT_OF_SERVICE = "outOfService";
]]></code>
				</codeSegment>
			</codeSegments>
		</class>

		<class>
			<name>CRemoteNexusInstance</name>
			<version>1.0.2+</version>
			<description>
				The known remote Nexus instances.
			</description>
			<fields>
				<field>
					<name>alias</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>The alias of remote Nexus</description>
				</field>
				<field>
					<name>instanceUrl</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>The URL of remote Nexus context root.</description>
				</field>
			</fields>
		</class>
		
		<!-- CONNECTION AND PROXIES -->
		<class>
			<name>CRemoteConnectionSettings</name>
			<version>1.0.0+</version>
			<description>
				The connections settings defines common connection properties, like retries count and timeouts.
			</description>
			<fields>
				<field>
					<name>connectionTimeout</name>
					<version>1.0.0+</version>
					<type>int</type>
					<required>true</required>
					<description>HTTP connection timeout in miliseconds.</description>
					<defaultValue>10000</defaultValue>
				</field>
				<field>
					<name>retrievalRetryCount</name>
					<version>1.0.0+</version>
					<type>int</type>
					<required>true</required>
					<description>The count of HTTP request retries in case of failures.</description>
					<defaultValue>3</defaultValue>
				</field>
				<field>
					<name>queryString</name>
					<version>1.0.0</version>
					<type>String</type>
					<required>false</required>
					<description>Query string to be appended to remote URL.</description>
				</field>
				<field>
					<name>queryString</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
					<description>Query string to be appended to remote URL.</description>
					<defaultValue></defaultValue>
				</field>
				<field>
					<name>userAgentString</name>
					<version>1.0.0</version>
					<type>String</type>
					<required>false</required>
					<description>A user-agent identification to send in HTTP requests, if needed.</description>
				</field>
				<field>
					<name>userAgentString</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
					<description>A user-agent identification to send in HTTP requests, if needed.</description>
					<defaultValue>Nexus/1.0</defaultValue>
				</field>
			</fields>
		</class>
		<class>
			<name>CRemoteHttpProxySettings</name>
			<version>1.0.0+</version>
			<description>The HTTP Proxy defines proxies used to access the internet.</description>
			<fields>
				<field>
					<name>proxyHostname</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>THe hostname of HTTP proxy.</description>
				</field>
				<field>
					<name>proxyPort</name>
					<version>1.0.0+</version>
					<type>int</type>
					<required>true</required>
					<description>The port of the HTTP proxy.</description>
				</field>
				<field>
					<name>authentication</name>
					<version>1.0.0+</version>
					<association>
						<type>CRemoteAuthentication</type>
					</association>
					<required>false</required>
				</field>
			</fields>
		</class>

		<class>
			<name>CRemoteAuthentication</name>
			<version>1.0.0+</version>
			<description>
				Remote authentication tokens used in remote authentications against HTTP Proxies and/or protected remote
				repositories.
			</description>
			<fields>
				<field>
					<name>username</name>
					<version>1.0.0</version>
					<type>String</type>
					<required>true</required>
					<description>The username to authenticate with.</description>
				</field>
				<field>
					<name>username</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>false</required>
					<description>The username to authenticate with.</description>
				</field>
				<field>
					<name>password</name>
					<version>1.0.0</version>
					<type>String</type>
					<required>true</required>
					<description>The password to authenticate with.</description>
				</field>
				<field>
					<name>password</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>false</required>
					<description>The password to authenticate with.</description>
				</field>
				<field>
					<name>ntlmHost</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>false</required>
					<description>The host that is origin of NTLM authentication.</description>
				</field>
				<field>
					<name>ntlmDomain</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>false</required>
					<description>The NTLM domain to auth against.</description>
				</field>
				<field>
					<name>privateKey</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>false</required>
					<description>The path of the private key to use in remote authentication.</description>
				</field>
				<field>
					<name>passphrase</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>false</required>
					<description>The passphrase of the private key.</description>
				</field>
			</fields>
		</class>

		<!-- ROUTING -->
		<class>
			<name>CRouting</name>
			<version>1.0.0+</version>
			<description>Nexus routing settings.</description>
			<fields>
				<field>
					<name>followLinks</name>
					<version>1.0.1+</version>
					<type>boolean</type>
					<required>true</required>
					<description>Should routers follow/resolve links?</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>notFoundCacheTTL</name>
					<version>1.0.1+</version>
					<type>int</type>
					<required>true</required>
					<description>
						NotFoundCache, the neg-cache records time to live in minutes. How long will misses be cached.
					</description>
					<defaultValue>1440</defaultValue>
				</field>
				<field>
					<name>repositories</name>
					<version>1.0.0</version>
					<description>Settings for repository based, thus non-aggregating router.</description>
					<association>
						<type>CRepositoriesSetting</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>groups</name>
					<version>1.0.0</version>
					<description>Settings for group based, thus aggregating router.</description>
					<association>
						<type>CGroupsSetting</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>groups</name>
					<version>1.0.1+</version>
					<description>Settings for group based, thus aggregating router.</description>
					<association>
						<type>CGroupsSetting</type>
					</association>
					<required>true</required>
				</field>
			</fields>
		</class>

		<class>
			<name>CRepositoriesSetting</name>
			<version>1.0.0</version>
			<description>Non-aggregating router settings.</description>
			<fields>
				<field>
					<name>followLinks</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>Should router follow/resolve links?</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>notFoundCacheTTL</name>
					<version>1.0.0</version>
					<type>int</type>
					<required>true</required>
					<description>
						NotFoundCache, the neg-cache records time to live in minutes. How long will misses be cached.
					</description>
					<defaultValue>1440</defaultValue>
				</field>
			</fields>
		</class>

		<class>
			<name>CGroupsSetting</name>
			<version>1.0.0+</version>
			<description>Aggregating router settings.</description>
			<fields>
				<field>
					<name>followLinks</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>Should router follow/resolve links?</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>notFoundCacheTTL</name>
					<version>1.0.0</version>
					<type>int</type>
					<required>true</required>
					<description>
						NotFoundCache, the neg-cache records time to live in minutes. How long will misses be cached.
					</description>
					<defaultValue>1440</defaultValue>
				</field>
				<field>
					<name>stopItemSearchOnFirstFoundFile</name>
					<version>1.0.0+</version>
					<type>boolean</type>
					<required>true</required>
					<description>Should router stop grouped search on first found file?</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>mergeMetadata</name>
					<version>1.0.0+</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						Should router merge or spoof metadata? If true, merging will occur, otherwise spoofing.
					</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<!-- In 1.0.0 only, later moved to repositoryGrouping elem -->
					<name>pathMapping</name>
					<version>1.0.0</version>
					<association>
						<type>CGroupsSettingPathMapping</type>
					</association>
					<required>false</required>
					<description>
						Path mapping, that directs routers where to search and/or avoid full-group search. You can also
						use path mappings to create ranking exceptions, since if mapping is found for path, the request
						will be executed by ordering supplied in mapping.
					</description>
				</field>
			</fields>
		</class>

		<class>
			<name>CGroupsSettingPathMapping</name>
			<version>1.0.0</version>
			<fields>
				<field>
					<name>inclusions</name>
					<version>1.0.0</version>
					<association>
						<type>CProps</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>true</required>
					<description>
						The map of inclusions. Keys are regexps for paths (like /some/path/.*) and values are comma
						separated list of repository ID's.
					</description>
				</field>
				<field>
					<name>exclusions</name>
					<version>1.0.0</version>
					<association>
						<type>CProps</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>true</required>
					<description>
						The map of exclusions. Keys are regexps for paths (like /some/path/.*) and values are comma
						separated list of repository ID's.
					</description>
				</field>
			</fields>
		</class>

		<!-- REPOSITORIES -->
		<class>
			<name>CRepository</name>
			<version>1.0.0+</version>
			<description>The Nexus repository model.</description>
			<fields>
				<field>
					<name>id</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>Repository ID. It should uniquely identify this repository across Nexus.</description>
				</field>
				<field>
					<name>name</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>Human readable Repository name.</description>
				</field>
				<field>
					<name>localStatus</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>The local status of repository.</description>
					<defaultValue>inService</defaultValue>
				</field>
				<field>
					<name>proxyMode</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>The proxyMode of repository.</description>
					<defaultValue>allow</defaultValue>
				</field>
				<field>
					<name>type</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>The type of repository.</description>
					<defaultValue>maven2</defaultValue>
				</field>
				<field>
					<name>available</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>If false, repository will deny any kind of request.</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>available</name>
					<version>1.0.1</version>
					<type>boolean</type>
					<required>true</required>
					<description>If false, repository will deny any kind of request.</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>readOnly</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository will deny any kind of deployment (write) request. Caching will still work.
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>readOnly</name>
					<version>1.0.1</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository will deny any kind of deployment (write) request. Caching will still work.
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>allowWrite</name>
					<version>1.0.2+</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository will deny any kind of deployment (write) request. Caching will still work.
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>browseable</name>
					<version>1.0.0+</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository is browseable on UI/DAV. With any value repository will still properly serve
						Maven clients.
					</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>offline</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository will never try to reach it's remote peer. Will offer the content it has in
						cache/local store.
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>offline</name>
					<version>1.0.1</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository will never try to reach it's remote peer. Will offer the content it has in
						cache/local store.
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>indexable</name>
					<version>1.0.0+</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository will get indexed. If false, the files and artifacts from repository will NOT
						appear on Nexus index, thus will be not searcheable (and browseable on views that relies on
						index), altough it will serve Maven clients properly.
					</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>notFoundCacheTTL</name>
					<version>1.0.0+</version>
					<type>int</type>
					<required>true</required>
					<description>
						NotFoundCache, the neg-cache records time to live in minutes. How long will misses be cached.
					</description>
					<defaultValue>1440</defaultValue>
				</field>
				<field>
					<name>artifactMaxAge</name>
					<version>1.0.1+</version>
					<type>int</type>
					<required>true</required>
					<description>
						Max. minutes that have to pass before Nexus will look to remote peer for possibly new version of
						artifact.
					</description>
					<defaultValue>1440</defaultValue>
				</field>
				<field>
					<name>metadataMaxAge</name>
					<version>1.0.1+</version>
					<type>int</type>
					<required>true</required>
					<description>
						Max. minutes that have to pass before Nexus will look to remote peer for possibly new version of
						repository metadata.
					</description>
					<defaultValue>1440</defaultValue>
				</field>
				<field>
					<name>itemMaxAge</name>
					<version>1.0.0</version>
					<type>int</type>
					<required>true</required>
					<description>
						Max. minutes that have to pass before Nexus will look to remote peer for possibly new version of
						cached file.
					</description>
					<defaultValue>1440</defaultValue>
				</field>
				<field>
					<name>shouldServeReleases</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>If true, repository will serve requests for released artifacts.</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>shouldServeSnapshots</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>If true, repository will serve requests for snapshot artifacts.</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>maintainProxiedRepositoryMetadata</name>
					<version>1.0.1+</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, repository will fix/maintain repository metadata (according to it's repositoryType)
						that is coming from it's remote store (this setting does not affect hosted reposes). Beware,
						this setting is modifying the repo metadata!
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>repositoryPolicy</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
					<description>
						The type of repository, it may have "release" or "snapshot" values allowing it to
						host/proxy/server release or snapshot artifacts only.
					</description>
					<defaultValue>release</defaultValue>
				</field>
				<field>
					<name>checksumPolicy</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>
						The checksum policy of this repository (used on proxies only). Valid values are: 'ignore'
						(simply ignore checksums), 'warn' (warn in logs on wrong checksums but serve it), 'strict'
						(strict checksumming, on bad or missing remote checksum the artifact is not served) and
						'strictIfExists' (like 'strict' if hash exists remotely or warn if not exists).
					</description>
					<defaultValue>warn</defaultValue>
				</field>
				<field>
					<name>downloadRemoteIndexes</name>
					<version>1.0.2+</version>
					<type>boolean</type>
					<required>true</required>
					<description>If this repo is Proxy, should we download remote indexes?</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>realmId</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>false</required>
					<description>The ID of defined realm from "security" section of configuration.</description>
				</field>

				<field>
					<name>localStorage</name>
					<version>1.0.0+</version>
					<description>
						The local storage definition of repository. It is optional element. If not defined, the
						repository will use the shared local storage.
					</description>
					<association>
						<type>CLocalStorage</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>remoteStorage</name>
					<version>1.0.0+</version>
					<description>
						The remote storage definition of repository. It not defined, the repository will be
						Nexus-hosted. If defined at least the remote URL, the repository will be proxy-repository.
					</description>
					<association>
						<type>CRemoteStorage</type>
					</association>
					<required>false</required>
				</field>
			</fields>
			<codeSegments>
				<codeSegment>
					<version>1.0.1</version>
					<code><![CDATA[
    public static final String REPOSITORY_TYPE_RELEASE = "release";

    public static final String REPOSITORY_TYPE_SNAPSHOT = "snapshot";

	/* A field that "carries" the Configuration modelVersion with object */
    public final String modelVersion = Configuration.MODEL_VERSION;
    
    /* A field to store the default local storage URL */
    public transient String defaultLocalStorageUrl;
]]></code>
				</codeSegment>
				<codeSegment>
					<version>1.0.2+</version>
					<code><![CDATA[
    public static final String REPOSITORY_POLICY_RELEASE = "release";
    public static final String REPOSITORY_POLICY_SNAPSHOT = "snapshot";

    public static final String CHECKSUM_POLICY_IGNORE = "ignore";
    public static final String CHECKSUM_POLICY_WARN = "warn";
    public static final String CHECKSUM_POLICY_STRICT_IF_EXISTS = "strictIfExists";
    public static final String CHECKSUM_POLICY_STRICT = "strict";

    public static final String PROXY_MODE_ALLOW = "allow";
    public static final String PROXY_MODE_BLOCKED_AUTO = "blockedAuto";
    public static final String PROXY_MODE_BLOCKED_MANUAL = "blockedManual";

    public static final String TYPE_MAVEN2 = "maven2";
    public static final String TYPE_MAVEN1 = "maven1";
    public static final String TYPE_MAVEN_SITE = "maven-site";
    public static final String TYPE_ECLIPSE_UPDATE_SITE = "eclipse-update-site";

	/* A field that "carries" the Configuration modelVersion with object */
    public final String modelVersion = Configuration.MODEL_VERSION;
    
    /* A field to store the default local storage URL */
    public transient String defaultLocalStorageUrl;
]]></code>
				</codeSegment>
			</codeSegments>
		</class>

		<class>
			<name>CLocalStorage</name>
			<version>1.0.0+</version>
			<description>
				The local storage definition. If defined, the repository will have own instance of local storage instead
				to use shared one.
			</description>
			<fields>
				<field>
					<name>provider</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
					<description>The provider of the local storage.</description>
					<defaultValue>file</defaultValue>
				</field>
				<field>
					<name>url</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>The URL of the local storage.</description>
				</field>
				<field>
					<name>shared</name>
					<version>1.0.0</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, the base of URL will be repoIds. Set to false if this local storage points to an
						existing repo contens on FS not in default location.
					</description>
					<defaultValue>false</defaultValue>
				</field>
			</fields>
		</class>
		<class>
			<name>CRemoteStorage</name>
			<version>1.0.0+</version>
			<description>
				The remote storage definition. If URL is only defined, the repository will share one shared remote
				storage instance. If any other properties are defined, the repository will own a private repository
				store instance.
			</description>
			<fields>
				<field>
					<name>provider</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
					<description>The provider of the remote storage.</description>
					<defaultValue>apacheHttpClient3x</defaultValue>
				</field>
				<field>
					<name>url</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>The URL of the remote storage. Mandatory.</description>
				</field>
				<field>
					<name>authentication</name>
					<version>1.0.0+</version>
					<description>
						The remote authentication, if needed to authenticate on remote repository.
					</description>
					<association>
						<type>CRemoteAuthentication</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>connectionSettings</name>
					<version>1.0.0+</version>
					<description>
						The specific connection settings to use when connecting to this repository.
					</description>
					<association>
						<type>CRemoteConnectionSettings</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>httpProxySettings</name>
					<version>1.0.0+</version>
					<description>
						The specific HTTP Proxy settings to use when connecting to this repository.
					</description>
					<association>
						<type>CRemoteHttpProxySettings</type>
					</association>
					<required>false</required>
				</field>
			</fields>
		</class>

		<!-- SHADOW REPOSES -->
		<class>
			<name>CRepositoryShadow</name>
			<version>1.0.0+</version>
			<description>Shadow repository definition.</description>
			<fields>
				<field>
					<name>id</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>Repository ID. It should uniquely identify this repository across Nexus.</description>
				</field>
				<field>
					<name>name</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>Human readable Repository name.</description>
				</field>
				<field>
					<name>localStatus</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>The local status of repository.</description>
					<defaultValue>inService</defaultValue>
				</field>
				<field>
					<name>available</name>
					<version>1.0.1</version>
					<type>boolean</type>
					<required>true</required>
					<description>If false, repository will deny any kind of request.</description>
					<defaultValue>true</defaultValue>
				</field>
				<field>
					<name>shadowOf</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>
						Repository ID of existing Nexus repository to be master of this shadow. It should point to an
						existing Nexus Repository.
					</description>
				</field>
				<field>
					<name>type</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>
						Shadow type.
					</description>
					<defaultValue>maven1</defaultValue>
				</field>
				<field>
					<name>syncAtStartup</name>
					<version>1.0.0+</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If true, the shadow will sync with master at startup. It may cause longer startup time of Nexus.
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>realmId</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>false</required>
					<description>The ID of defined realm from "security" section of configuration.</description>
				</field>
				<field>
					<name>artifactVersionConstraints</name>
					<version>1.0.2+</version>
					<association>
						<type>CRepositoryShadowArtifactVersionConstraint</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>false</required>
					<description>Version constraints for Constrained shadow.</description>
				</field>
			</fields>
			<codeSegments>
				<codeSegment>
					<version>1.0.1+</version>
					<code><![CDATA[
    public static final String TYPE_MAVEN1 = "maven1"; /* maven1 layout of maven2 repo */
    public static final String TYPE_MAVEN2 = "maven2"; /* maven2 layout of maven1 repo */
    public static final String TYPE_MAVEN2_CONSTRAINED = "maven2-constrained"; /* maven2 with version constraints */

	/* A field that "carries" the Configuration modelVersion with object */
    public final String modelVersion = Configuration.MODEL_VERSION;
    
    /* A field to store the default local storage URL */
    public transient String defaultLocalStorageUrl;
]]></code>
				</codeSegment>
			</codeSegments>
		</class>
		<class>
			<name>CRepositoryShadowArtifactVersionConstraint</name>
			<version>1.0.2+</version>
			<description>Shadow Repository artifact version constraint.</description>
			<fields>
				<field>
					<name>groupId</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
				</field>
				<field>
					<name>artifactId</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
				</field>
				<field>
					<name>version</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
				</field>
			</fields>
		</class>

		<!-- REPO GROUPS -->
		<class>
			<name>CRepositoryGrouping</name>
			<version>1.0.1+</version>
			<description>Repository grouping definitions.</description>
			<fields>
				<field>
					<name>pathMappings</name>
					<version>1.0.1+</version>
					<association>
						<type>CGroupsSettingPathMappingItem</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>false</required>
					<description>
						Path mapping, that directs grouping router where to search and/or avoid full-group search. You
						can also use path mappings to create ranking exceptions, since if mapping is found for path, the
						request will be executed by ordering supplied in mapping.
					</description>
				</field>
				<field>
					<name>repositoryGroups</name>
					<version>1.0.1+</version>
					<association>
						<type>CRepositoryGroup</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>true</required>
					<description>
						The list of repositories that are members of this group. The order in this list defines the repo
						ordering in group.
					</description>
				</field>
			</fields>
		</class>

		<class>
			<name>CGroupsSettingPathMappingItem</name>
			<version>1.0.1+</version>
			<fields>
				<field>
					<name>id</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
				</field>
				<field>
					<name>routePattern</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
				</field>
				<field>
					<name>routeType</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
				</field>
				<field>
					<name>repositories</name>
					<version>1.0.1+</version>
					<association>
						<type>String</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>true</required>
				</field>
			</fields>
			<codeSegments>
				<codeSegment>
					<version>1.0.1+</version>
					<code><![CDATA[
    public static final String EXCLUSION_RULE_TYPE = "exclusive";

    public static final String INCLUSION_RULE_TYPE = "inclusive";
    
    public static final String BLOCKING_RULE_TYPE = "blocking";
]]></code>
				</codeSegment>
			</codeSegments>
		</class>

		<class>
			<name>CRepositoryGroup</name>
			<version>1.0.0+</version>
			<description>Repository group definition.</description>
			<fields>
				<field>
					<name>groupId</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>
						Repository group ID, that identifies this group and takes part in calculation of repo group root
						path.
					</description>
				</field>
				<field>
					<name>name</name>
					<version>1.0.1+</version>
					<type>String</type>
					<required>true</required>
					<description>Human readable Repository Group name.</description>
				</field>
				<field>
					<name>repositories</name>
					<version>1.0.0+</version>
					<association>
						<type>String</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>true</required>
					<description>
						The list of repositories that are members of this group. The order in this list defines the repo
						ordering in group.
					</description>
				</field>
			</fields>
		</class>

		<!-- SECURITY -->
		<class>
			<name>CSecurity</name>
			<version>1.0.0+</version>
			<description>The security section of Nexus configuration.</description>
			<fields>
				<field>
					<name>enabled</name>
					<version>1.0.0+</version>
					<type>boolean</type>
					<required>true</required>
					<description>The only mandatory element. If true, Nexus instance will be secured.</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>anonymousAccessEnabled</name>
					<version>1.0.0+</version>
					<type>boolean</type>
					<required>true</required>
					<description>
						If enabled, the users will be able to access DAV resources unauthenticated, if Realm allows. To
						set rights for unauthenticated users, use "anonymous" username.
					</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>authenticationSource</name>
					<version>1.0.0+</version>
					<description>The authentication source to use with Nexus.</description>
					<association>
						<type>CAuthSource</type>
					</association>
					<required>false</required>
				</field>
				<field>
					<name>realms</name>
					<version>1.0.0+</version>
					<description>The list of realms used to Nexus.</description>
					<association>
						<type>CAuthzSource</type>
						<multiplicity>*</multiplicity>
					</association>
					<required>false</required>
				</field>
			</fields>
		</class>
		<class>
			<name>CAuthSource</name>
			<version>1.0.0+</version>
			<description>Authentication source definition.</description>
			<fields>
				<field>
					<name>type</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>The type of the AuthenticationSource (role-hint).</description>
					<defaultValue>properties</defaultValue>
				</field>
				<field>
					<name>properties</name>
					<version>1.0.0+</version>
					<description>Implementation specific settings.</description>
					<required>false</required>
					<association>
						<type>CProps</type>
						<multiplicity>*</multiplicity>
					</association>
				</field>
			</fields>
		</class>
		<class>
			<name>CAuthzSource</name>
			<version>1.0.0+</version>
			<description>Authorization source definition (realm).</description>
			<fields>
				<field>
					<name>id</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>The ID of authorization realm.</description>
				</field>
				<field>
					<name>type</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>The type of the realm provider (role-hint).</description>
				</field>
				<field>
					<name>properties</name>
					<version>1.0.0+</version>
					<description>Implementation specific settings.</description>
					<required>false</required>
					<association>
						<type>CProps</type>
						<multiplicity>*</multiplicity>
					</association>
				</field>
			</fields>
		</class>

		<!-- REST Settings -->
		<class>
			<name>CRestApiSettings</name>
			<version>1.0.2+</version>
			<description>The REST API Settings.</description>
			<fields>
				<field>
					<name>accessAllowedFrom</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>Allow</description>
					<defaultValue>*</defaultValue>
				</field>
				<field>
					<name>authTokenExpiration</name>
					<version>1.0.2+</version>
					<type>int</type>
					<required>true</required>
					<description>The auth token expiration in minutes. Default is one week.</description>
					<defaultValue>10080</defaultValue>
				</field>
			</fields>
		</class>

		<!-- HTTP Proxy Settings -->
		<class>
			<name>CHttpProxySettings</name>
			<version>1.0.2+</version>
			<description>The HTTP Proxy Settings.</description>
			<fields>
				<field>
					<name>enabled</name>
					<version>1.0.2+</version>
					<type>boolean</type>
					<required>true</required>
					<description>Is the service enabled?</description>
					<defaultValue>false</defaultValue>
				</field>
				<field>
					<name>port</name>
					<version>1.0.2+</version>
					<type>int</type>
					<required>true</required>
					<description>The port of the HTTP Proxy</description>
					<defaultValue>8082</defaultValue>
				</field>
				<field>
					<name>proxyPolicy</name>
					<version>1.0.2+</version>
					<type>String</type>
					<required>true</required>
					<description>The policy of proxy (strict, passThru).</description>
					<defaultValue>strict</defaultValue>
				</field>
			</fields>
			<codeSegments>
				<codeSegment>
					<version>1.0.2+</version>
					<code><![CDATA[
    public static final String PROXY_POLICY_STRICT = "strict";

    public static final String PROXY_POLICY_PASS_THRU = "passThru";
]]></code>
				</codeSegment>
			</codeSegments>
		</class>

		<!-- UTIL -->
		<class>
			<name>CProps</name>
			<version>1.0.0+</version>
			<description>Properties-like generic key-value map.</description>
			<fields>
				<field>
					<name>key</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>Property key.</description>
				</field>
				<field>
					<name>value</name>
					<version>1.0.0+</version>
					<type>String</type>
					<required>true</required>
					<description>Property value.</description>
				</field>
			</fields>
		</class>

	</classes>
</model>
